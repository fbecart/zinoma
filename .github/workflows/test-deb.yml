name: test-deb
on:
  pull_request:
jobs:
  build-deb:
    name: build-deb
    runs-on: ubuntu-latest
    env:
      # Emit backtraces on panics.
      RUST_BACKTRACE: 1
    strategy:
      matrix:
        build: [amd64, i386]
        include:
          - build: amd64
            target: x86_64-unknown-linux-gnu
          - build: i386
            target: i686-unknown-linux-gnu

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Install cargo-deb
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-deb

      - name: Build binary and assets
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target=${{ matrix.target }}
          use-cross: true

      - name: Copy assets
        shell: bash
        run: |
          outdir="$(ci/cargo-out-dir.sh ./target/${{ matrix.target }})"
          deploydir=deployment/deb
          mkdir -p "$deploydir"
          cp "$outdir"/{zinoma.bash,_zinoma,zinoma.fish} "$deploydir/"

      - name: Build deb
        uses: actions-rs/cargo@v1
        with:
          command: deb
          args: --no-build --target=${{ matrix.target }}

      - name: Obtain asset path and name
        shell: bash
        run: |
          echo "::set-env name=ASSET_PATH::$(ls target/${{ matrix.target }}/debian/*.deb)"
          echo "asset path: ${{ env.ASSET_PATH }}"
          echo "::set-env name=ASSET_NAME::$(basename ${{ env.ASSET_PATH }})"
          echo "asset name: ${{ env.ASSET_NAME }}"
