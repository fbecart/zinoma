(function() {var implementors = {};
implementors["zinoma"] = [{"text":"impl Freeze for TerminationMessage","synthetic":true,"types":[]},{"text":"impl&lt;L, R&gt; Freeze for Both&lt;L, R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;L: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;F&gt; Freeze for MaybeDone&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Config","synthetic":true,"types":[]},{"text":"impl Freeze for Config","synthetic":true,"types":[]},{"text":"impl Freeze for Project","synthetic":true,"types":[]},{"text":"impl Freeze for Dependencies","synthetic":true,"types":[]},{"text":"impl Freeze for InputResources","synthetic":true,"types":[]},{"text":"impl Freeze for OutputResources","synthetic":true,"types":[]},{"text":"impl Freeze for Target","synthetic":true,"types":[]},{"text":"impl Freeze for InputResource","synthetic":true,"types":[]},{"text":"impl Freeze for OutputResource","synthetic":true,"types":[]},{"text":"impl Freeze for TargetMetadata","synthetic":true,"types":[]},{"text":"impl Freeze for BuildTarget","synthetic":true,"types":[]},{"text":"impl Freeze for ServiceTarget","synthetic":true,"types":[]},{"text":"impl Freeze for AggregateTarget","synthetic":true,"types":[]},{"text":"impl Freeze for TargetId","synthetic":true,"types":[]},{"text":"impl Freeze for FilesResource","synthetic":true,"types":[]},{"text":"impl Freeze for CmdResource","synthetic":true,"types":[]},{"text":"impl Freeze for Resources","synthetic":true,"types":[]},{"text":"impl Freeze for Target","synthetic":true,"types":[]},{"text":"impl Freeze for WatchOption","synthetic":true,"types":[]},{"text":"impl Freeze for BuildCancellationMessage","synthetic":true,"types":[]},{"text":"impl Freeze for BuildTerminationReport","synthetic":true,"types":[]},{"text":"impl Freeze for TargetEnvState","synthetic":true,"types":[]},{"text":"impl Freeze for IncrementalRunResult","synthetic":true,"types":[]},{"text":"impl Freeze for ResourcesState","synthetic":true,"types":[]},{"text":"impl Freeze for ResourcesState","synthetic":true,"types":[]},{"text":"impl Freeze for ResourcesState","synthetic":true,"types":[]},{"text":"impl Freeze for TargetActorHandleSet","synthetic":true,"types":[]},{"text":"impl Freeze for ActorInputMessage","synthetic":true,"types":[]},{"text":"impl Freeze for TargetActorOutputMessage","synthetic":true,"types":[]},{"text":"impl Freeze for ActorId","synthetic":true,"types":[]},{"text":"impl Freeze for ExecutionKind","synthetic":true,"types":[]},{"text":"impl Freeze for AggregateTargetActor","synthetic":true,"types":[]},{"text":"impl Freeze for BuildTargetActor","synthetic":true,"types":[]},{"text":"impl Freeze for ServiceTargetActor","synthetic":true,"types":[]},{"text":"impl Freeze for TargetActorHelper","synthetic":true,"types":[]},{"text":"impl Freeze for TargetActors","synthetic":true,"types":[]},{"text":"impl Freeze for TargetWatcher","synthetic":true,"types":[]},{"text":"impl Freeze for TargetInvalidatedMessage","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()