[package]
name = "zinoma"
version = "0.19.6"
authors = ["Florent Bécart <florent.becart@gmail.com>"]
edition = "2021"

description = "Žinoma - Make your build flow incremental"
license = "MIT"
repository = "https://github.com/fbecart/zinoma"
homepage = "https://github.com/fbecart/zinoma"
documentation = "https://github.com/fbecart/zinoma/blob/master/README.md"
readme = "README.md"
categories = ["command-line-utilities", "development-tools::build-utils"]
keywords = ["parallel", "incremental", "build", "tool", "watch"]
build = "build/main.rs"

[dependencies]
serde = { version = "1.0", features = ["derive"] }
serde_yaml = "0.8"
walkdir = "2"
notify = "6.1.1"
clap = "=3.0.0-beta.1"
log = "0.4"
stderrlog = "0.6"
anyhow = "1.0"
regex = "1"
lazy_static = "1.4.0"
seahash = "4.1"
bincode = "1.3"
async-ctrlc = { version = "1.2.0", features = ["termination"] }
schemars = "0.8"
dunce = "1.0"
itertools = "0.10"
async-std = { version = "1.9", features = ["unstable"] }
futures = "0.3"
async-process = "1.0"

[target.'cfg(all(not(target_env = "msvc"), target_pointer_width = "64"))'.dependencies]
jemallocator = "0.3.2"

[dev-dependencies]
assert_cmd = "1.0"
predicates = "3.1"

[build-dependencies]
clap = "=3.0.0-beta.1"
clap_generate = "=3.0.0-beta.1"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
schemars = "0.8"

[package.metadata.deb]
section = "utils"
assets = [
  ["target/release/zinoma", "usr/bin/", "755"],
  ["LICENSE", "usr/share/doc/zinoma/", "644"],
  ["CHANGELOG.md", "usr/share/doc/zinoma/CHANGELOG", "644"],
  ["README.md", "usr/share/doc/zinoma/README", "644"],
  # Shell completion scripts are automatically generated by zinoma's build process,
  # and these files aren't actually committed.
  ["deployment/deb/zinoma.bash", "usr/share/bash-completion/completions/zinoma", "644"],
  ["deployment/deb/_zinoma", "usr/share/zsh/vendor-completions/", "644"],
  ["deployment/deb/zinoma.fish", "usr/share/fish/vendor_completions.d/", "644"],
]
extended-description = "Žinoma provides a simple command line to execute your most common build flows in the most efficient way."

# Speedup build on macOS
# See https://blog.rust-lang.org/2021/03/25/Rust-1.51.0.html#splitting-debug-information
[profile.dev]
split-debuginfo = "unpacked"
